{"version":3,"sources":["components/Section/Section.js","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css"],"names":["Section","title","children","Notification","message","FeedbackOptions","options","onLeaveFeedback","map","option","idx","className","styles","feedbackBtn","type","name","key","onClick","word","charAt","toUpperCase","slice","Statistics","good","bad","neutral","total","positivePercentage","list","App","state","handleIncrement","evt","target","setState","s","this","Math","floor","Object","keys","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"kSAiBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,kBAAC,WAAD,KACE,4BAAKD,GACJC,ICIQC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,8BAAOA,I,gBC6BDC,MAzBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,6BACGD,EAAQE,KAAI,SAACC,EAAQC,GACpB,OACE,4BACEC,UAAWC,IAAOC,YAClBC,KAAK,SACLC,KAAMN,EACNO,IAAKN,EACLO,QAASV,IAdFW,EAgBKT,GAfVU,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,IADhC,IAAAH,O,gBCoBJI,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,IAAKC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,wBAAIhB,UAAWC,IAAOgB,MACpB,qCAAWL,GACX,wCAAcE,GACd,oCAAUD,GACV,sCAAYE,GACZ,kDAAwBH,EAAOI,EAAqB,EAApD,OCLeE,E,4MACnBC,MAAQ,CACNP,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGPO,gBAAkB,SAAAC,GAAQ,IAChBjB,EAASiB,EAAIC,OAAblB,KACR,EAAKmB,UAAS,SAAAC,GACZ,OAAO,eAAGpB,EAAOoB,EAAEpB,GAAQ,O,mEAIT,IAAD,EACYqB,KAAKN,MACpC,OAFmB,EACXP,KADW,EACLE,QADK,EACID,M,wDAIU,IAAD,EACDY,KAAKN,MAA5BP,EADwB,EACxBA,KAAME,EADkB,EAClBA,QAASD,EADS,EACTA,IACvB,OAAOa,KAAKC,MAAOf,GAAQA,EAAOE,EAAUD,GAAQ,O,+BAG5C,IAAD,EACwBY,KAAKN,MAA5BP,EADD,EACCA,KAAME,EADP,EACOA,QAASD,EADhB,EACgBA,IAEvB,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAASvB,MAAO,+BACd,kBAAC,EAAD,CACEK,QAASiC,OAAOC,KAAKJ,KAAKN,OAC1BvB,gBAAiB6B,KAAKL,mBAI1B,kBAAC,EAAD,CAAS9B,MAAO,cACbsB,GAAQE,GAAWD,EAClB,kBAAC,EAAD,CACED,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOU,KAAKK,qBACZd,mBAAoBS,KAAKM,oCAG3B,kBAAC,EAAD,CAActC,QAAS,6B,GA9CFuC,aCAjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCLjDC,EAAOC,QAAU,CAAC,YAAc,uC,kBCAhCD,EAAOC,QAAU,CAAC,KAAO,4B","file":"static/js/main.07b7c4cc.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <Fragment>\n      <h2>{title}</h2>\n      {children}\n    </Fragment>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <span>{message}</span>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst capitalize = word => {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n};\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map((option, idx) => {\n        return (\n          <button\n            className={styles.feedbackBtn}\n            type=\"button\"\n            name={option}\n            key={idx}\n            onClick={onLeaveFeedback}\n          >\n            {capitalize(option)}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction Statistics({ good, bad, neutral, total, positivePercentage }) {\n  return (\n    <ul className={styles.list}>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {good ? positivePercentage : 0}%</li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component, Fragment } from 'react';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = evt => {\n    const { name } = evt.target;\n    this.setState(s => {\n      return { [name]: s[name] + 1 };\n    });\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good, neutral, bad } = this.state;\n    return Math.floor((good / (good + neutral + bad)) * 100);\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Fragment>\n        <Section title={'Please leave your feedback!'}>\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title={'Statistics'}>\n          {good || neutral || bad ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message={'No feedback given!'} />\n          )}\n        </Section>\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__mxbon\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__jLLxZ\"};"],"sourceRoot":""}