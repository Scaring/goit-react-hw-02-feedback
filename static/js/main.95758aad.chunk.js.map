{"version":3,"sources":["components/Feedback/Section.js","components/Feedback/Notification.js","components/Feedback/FeedbackOptions.js","components/Feedback/Statistics.js","components/App.js","index.js","components/Feedback/FeedbackOptions.module.css","components/Feedback/Statistics.module.css"],"names":["Section","title","children","Notification","message","FeedbackOptions","options","onLeaveFeedback","map","option","idx","className","styles","feedbackBtn","type","name","key","onClick","word","charAt","toUpperCase","slice","Statistics","good","bad","neutral","total","positivePercentage","list","App","state","handleIncrement","evt","target","setState","s","this","Math","floor","Object","keys","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"uQAiBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,kBAAC,WAAD,KACE,4BAAKD,GACJC,ICIQC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,8BAAOA,I,gBC6BDC,MAzBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,6BACGD,EAAQE,KAAI,SAACC,EAAQC,GACpB,OACE,4BACEC,UAAWC,IAAOC,YAClBC,KAAK,SACLC,KAAMN,EACNO,IAAKN,EACLO,QAASV,IAdFW,EAgBKT,GAfVU,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,IADhC,IAAAH,O,gBCoBJI,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,IAAKC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,wBAAIhB,UAAWC,IAAOgB,MACpB,qCAAWL,GACX,wCAAcE,GACd,oCAAUD,GACV,sCAAYE,GACZ,kDAAwBH,EAAOI,EAAqB,EAApD,OCLeE,E,4MACnBC,MAAQ,CACNP,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGPO,gBAAkB,SAAAC,GAAQ,IAChBjB,EAASiB,EAAIC,OAAblB,KACR,EAAKmB,UAAS,SAAAC,GACZ,OAAO,eAAGpB,EAAOoB,EAAEpB,GAAQ,O,mEAK7B,OAAOqB,KAAKN,MAAMP,KAAOa,KAAKN,MAAML,QAAUW,KAAKN,MAAMN,M,wDAIzD,OAAOa,KAAKC,MACTF,KAAKN,MAAMP,MACTa,KAAKN,MAAMP,KAAOa,KAAKN,MAAML,QAAUW,KAAKN,MAAMN,KACnD,O,+BAKJ,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAASvB,MAAO,+BACd,kBAAC,EAAD,CACEK,QAASiC,OAAOC,KAAKJ,KAAKN,OAC1BvB,gBAAiB6B,KAAKL,mBAI1B,kBAAC,EAAD,CAAS9B,MAAO,cACbmC,KAAKN,MAAMP,MAAQa,KAAKN,MAAML,SAAWW,KAAKN,MAAMN,IACnD,kBAAC,EAAD,CACED,KAAMa,KAAKN,MAAMP,KACjBE,QAASW,KAAKN,MAAML,QACpBD,IAAKY,KAAKN,MAAMN,IAChBE,MAAOU,KAAKK,qBACZd,mBAAoBS,KAAKM,oCAG3B,kBAAC,EAAD,CAActC,QAAS,6B,GA9CFuC,aCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,YAAc,uC,kBCAhCD,EAAOC,QAAU,CAAC,KAAO,4B","file":"static/js/main.95758aad.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <Fragment>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <span>{message}</span>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst capitalize = word => {\r\n  return word.charAt(0).toUpperCase() + word.slice(1);\r\n};\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map((option, idx) => {\r\n        return (\r\n          <button\r\n            className={styles.feedbackBtn}\r\n            type=\"button\"\r\n            name={option}\r\n            key={idx}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {capitalize(option)}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nfunction Statistics({ good, bad, neutral, total, positivePercentage }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Positive feedback: {good ? positivePercentage : 0}%</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component, Fragment } from 'react';\nimport Section from './Feedback/Section';\nimport Notification from './Feedback/Notification';\nimport FeedbackOptions from './Feedback/FeedbackOptions';\nimport Statistics from './Feedback/Statistics';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = evt => {\n    const { name } = evt.target;\n    this.setState(s => {\n      return { [name]: s[name] + 1 };\n    });\n  };\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.floor(\n      (this.state.good /\n        (this.state.good + this.state.neutral + this.state.bad)) *\n        100,\n    );\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Section title={'Please leave your feedback!'}>\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title={'Statistics'}>\n          {this.state.good || this.state.neutral || this.state.bad ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message={'No feedback given!'} />\n          )}\n        </Section>\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__2VCY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1kl7-\"};"],"sourceRoot":""}